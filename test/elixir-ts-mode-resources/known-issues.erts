Code:
  (lambda ()
    (setq indent-tabs-mode nil)
    (elixir-ts-mode)
    (indent-region (point-min) (point-max)))

Point-Char: $

Name: Spec map return type

=-=
@type something() :: %{
        one: one(),
        two: two(),
        three: two()
      }
=-=-=

Name: Parameter maps

=-=
def something(%{
      one: :one,
      two: :two
    }) do
  {:ok, "done"}
end
=-=-=


Name: String concatenation assignment

=-=
foo =
  "one" <>
    "two" <>
    "three" <>
    "zar"
=-=-=


Name: Tuple with same line first node

=-=
{:one,
 :two}

{:ok,
 fn one ->
   one
   |> String.upcase(one)
 end}

=-=-=
